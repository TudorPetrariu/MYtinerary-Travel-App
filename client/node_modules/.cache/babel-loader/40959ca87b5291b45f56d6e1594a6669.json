{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport { HomeButton } from './HomeButton';\nimport { connect } from 'react-redux';\nimport { fetchCities } from \"../redux/actions/cityAction\";\n\nclass MyCities extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.searchHandler = e => {\n      this.setState({\n        word: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCities();\n  }\n\n  render() {\n    console.log(this.props);\n    const cities = this.props.cities;\n    const word = this.state.word;\n    const citiesList = cities.length ? cities.filter(search(word)).map(city => {\n      return React.createElement(\"div\", {\n        key: city._id,\n        className: \"card center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" \", city.name, \"  \"), React.createElement(\"img\", {\n        src: city.images,\n        className: \"cityimages\",\n        alt: \"cityimages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Fetching Cities..\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"center container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"SearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Search your city\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"SearchBar\",\n      onChange: this.searchHandler,\n      values: word,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \" container \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, citiesList), React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(fetchCities())\n  };\n};\n\nfunction search(word) {\n  return x => {\n    return x.name.toLowerCase().includes(word.toLowerCase()) || !word;\n  };\n  this.searchHandler = this.searchHandler.bind(this);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Cities.js"],"names":["React","Component","HomeButton","connect","fetchCities","MyCities","searchHandler","e","setState","word","target","value","componentDidMount","props","getCities","render","console","log","cities","state","citiesList","length","filter","search","map","city","_id","name","images","mapStateToProps","mapDispatchToProps","dispatch","x","toLowerCase","includes","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { HomeButton } from './HomeButton'\r\nimport { connect } from 'react-redux';\r\nimport { fetchCities } from \"../redux/actions/cityAction\"\r\n\r\n\r\n\r\n\r\n\r\nclass MyCities extends Component {\r\n    // constructor(props) {\r\n    //     super(props)\r\n    //     this.state = {\r\n    //         cities: '',\r\n    //         word: '',\r\n    //     }\r\n\r\n    //     this.searchHandler = this.searchHandler.bind(this)\r\n    // }\r\n\r\n    searchHandler = (e) => {\r\n\r\n        this.setState({\r\n            word: e.target.value\r\n        })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCities()\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(this.props)\r\n        const { cities } = this.props\r\n        const { word } = this.state\r\n        const citiesList = cities.length ? (cities.filter(search(word)).map(city => {\r\n\r\n            return (\r\n\r\n                <div key={city._id} className=\"card center \" >\r\n                    <h3 className=\"orange\" > {city.name}  </h3>\r\n                    <img src={city.images} className=\"cityimages\" alt=\"cityimages\" ></img>\r\n                </div>\r\n            )\r\n        })) : (\r\n                <div className=\"center\">Fetching Cities..</div>\r\n            )\r\n\r\n        return (\r\n            <div>\r\n                <form className=\"center container\">\r\n                    <label htmlFor=\"SearchBar\" >Search your city</label>\r\n                    <input type=\"text\" id=\"SearchBar\" onChange={this.searchHandler} values={word}></input>\r\n                </form>\r\n\r\n                <div className=\" container \">\r\n                    {citiesList}\r\n                </div>\r\n\r\n                <div className=\"footer-container\">\r\n                    <HomeButton />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        cities: state.cities\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCities: () => dispatch(fetchCities())\r\n    }\r\n}\r\nfunction search(word) {\r\n    return (x) => {\r\n        return x.name.toLowerCase().includes(word.toLowerCase()) || !word;\r\n    }\r\n    this.searchHandler = this.searchHandler.bind(this)\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);\r\n\r\n"]},"metadata":{},"sourceType":"module"}