{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Itynerary.js\";\nimport React, { Component } from 'react';\nimport { fetchSchema } from \"../redux/actions/schemaAction\";\nimport { connect } from 'react-redux';\n\nclass Itynerary extends Component {\n  componentDidMount() {\n    this.props.getSchema();\n  }\n\n  render() {\n    console.log(this.props);\n    const schema = this.props.schema;\n    const ItyneraryList = schema.length ? schema.map(schem => {\n      return React.createElement(\"div\", {\n        key: schem._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, schem.duration), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, schem.rating), React.createElement(\"img\", {\n        src: schem.profilePic,\n        alt: \"schemaImg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Getting Schema\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, ItyneraryList, React.createElement(\"p\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Schema\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    schema: state.schemaReducer.schema\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSchema: () => dispatch(fetchSchema())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itynerary);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Itynerary.js"],"names":["React","Component","fetchSchema","connect","Itynerary","componentDidMount","props","getSchema","render","console","log","schema","ItyneraryList","length","map","schem","_id","duration","rating","profilePic","mapStateToProps","state","schemaReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,SAAX;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AADK,UAEGK,MAFH,GAEc,KAAKL,KAFnB,CAEGK,MAFH;AAGL,UAAMC,aAAa,GAAGD,MAAM,CAACE,MAAP,GAAiBF,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAI;AACvD,aACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,KAAK,CAACE,QAAb,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIF,KAAK,CAACG,MAAV,CAFJ,EAGI;AAAK,QAAA,GAAG,EAAEH,KAAK,CAACI,UAAhB;AAA4B,QAAA,GAAG,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AASH,KAVsC,CAAjB,GAWd;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXR;AAaA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,aADL,EAEI;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH;;AA5B6B;;AA8BlC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAEHV,IAAAA,MAAM,EAAEU,KAAK,CAACC,aAAN,CAAoBX;AAFzB,GAAP;AAOH,CARD;;AAUA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHjB,IAAAA,SAAS,EAAE,MAAMiB,QAAQ,CAACtB,WAAW,EAAZ;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAeC,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { fetchSchema } from \"../redux/actions/schemaAction\"\r\nimport { connect } from 'react-redux'\r\n\r\nclass Itynerary extends Component {\r\n    componentDidMount() {\r\n        this.props.getSchema()\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        const { schema } = this.props\r\n        const ItyneraryList = schema.length ? (schema.map(schem => {\r\n            return (\r\n                <div key={schem._id}>\r\n                    <span>{schem.duration}</span>\r\n                    <p>{schem.rating}</p>\r\n                    <img src={schem.profilePic} alt=\"schemaImg\" ></img>\r\n\r\n\r\n                </div>\r\n            )\r\n        })) : (\r\n                <div className=\"center\">Getting Schema</div>\r\n            )\r\n        return (\r\n            <div>\r\n                {ItyneraryList}\r\n                <p className=\"center\">Schema</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        schema: state.schemaReducer.schema\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getSchema: () => dispatch(fetchSchema())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Itynerary);\r\n"]},"metadata":{},"sourceType":"module"}