{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport { HomeButton } from './HomeButton';\nimport { connect } from 'react-redux';\nimport { fetchCities } from \"../redux/actions/cityAction\";\n\nclass MyCities extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cities: this.props,\n      term: ''\n    };\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  searchHandler(e) {\n    this.setState({\n      term: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.props.getCities();\n  }\n\n  render() {\n    console.log(this.props);\n    const cities = this.props.cities; // let citiesList = cities.filter(search(this.state.term)).map(city =>\n    //     <div key={city._id}>\n    //         <li> {city.name} </li>\n    //         <img src={city.images} alt=\"cityimages\"></img>\n    //     </div>\n    // )\n\n    const citiesList = cities.length ? cities.filter(searchingFor(this.state.term)).map(city => {\n      return React.createElement(\"div\", {\n        key: city._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" \", city.name, \" \"), React.createElement(\"img\", {\n        src: city.images,\n        alt: \"cityimages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Fetching Cities..\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.searchHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, citiesList), React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities,\n    term: ''\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(fetchCities())\n  };\n};\n\nfunction search(term) {\n  return function (x) {\n    return x.name.toLowerCase().includes(term.toLowerCase()) || !term;\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Cities.js"],"names":["React","Component","HomeButton","connect","fetchCities","MyCities","constructor","props","state","cities","term","searchHandler","bind","e","setState","target","value","componentDidMount","getCities","render","console","log","citiesList","length","filter","searchingFor","map","city","_id","name","images","mapStateToProps","mapDispatchToProps","dispatch","search","x","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAKA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KAAKF,KADJ;AAETG,MAAAA,IAAI,EAAE;AAFG,KAAb;AAKA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AACDD,EAAAA,aAAa,CAACE,CAAD,EAAI;AACb,SAAKC,QAAL,CAAc;AACVJ,MAAAA,IAAI,EAAEG,CAAC,CAACE,MAAF,CAASC;AADL,KAAd;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,KAAL,CAAWW,SAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB;AADK,UAEGE,MAFH,GAEc,KAAKF,KAFnB,CAEGE,MAFH,EAIL;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMa,UAAU,GAAGb,MAAM,CAACc,MAAP,GAAiBd,MAAM,CAACe,MAAP,CAAcC,YAAY,CAAC,KAAKjB,KAAL,CAAWE,IAAZ,CAA1B,EAA6CgB,GAA7C,CAAiDC,IAAI,IAAI;AAEzF,aAEI;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMD,IAAI,CAACE,IAAX,MADJ,EAEI;AAAK,QAAA,GAAG,EAAEF,IAAI,CAACG,MAAf;AAAuB,QAAA,GAAG,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ;AAOH,KATmC,CAAjB,GAUX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVR;AAaA,WAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKnB,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,UADL,CAJJ,EAOI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAHJ;AAgBH;;AA5D4B;;AA+DjC,MAAMS,eAAe,GAAIvB,KAAD,IAAW;AAC/B,SAAO;AAEHC,IAAAA,MAAM,EAAED,KAAK,CAACC,MAFX;AAGHC,IAAAA,IAAI,EAAE;AAHH,GAAP;AAKH,CAND;;AAQA,MAAMsB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHf,IAAAA,SAAS,EAAE,MAAMe,QAAQ,CAAC7B,WAAW,EAAZ;AADtB,GAAP;AAGH,CAJD;;AAKA,SAAS8B,MAAT,CAAgBxB,IAAhB,EAAsB;AAClB,SAAO,UAAUyB,CAAV,EAAa;AAChB,WAAOA,CAAC,CAACN,IAAF,CAAOO,WAAP,GAAqBC,QAArB,CAA8B3B,IAAI,CAAC0B,WAAL,EAA9B,KAAqD,CAAC1B,IAA7D;AACH,GAFD;AAGH;;AAGD,eAAeP,OAAO,CAAC4B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C3B,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { HomeButton } from './HomeButton'\r\nimport { connect } from 'react-redux';\r\nimport { fetchCities } from \"../redux/actions/cityAction\"\r\n\r\n\r\n\r\n\r\nclass MyCities extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            cities: this.props,\r\n            term: '',\r\n        }\r\n\r\n        this.searchHandler = this.searchHandler.bind(this)\r\n    }\r\n    searchHandler(e) {\r\n        this.setState({\r\n            term: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCities()\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        const { cities } = this.props\r\n\r\n        // let citiesList = cities.filter(search(this.state.term)).map(city =>\r\n        //     <div key={city._id}>\r\n        //         <li> {city.name} </li>\r\n        //         <img src={city.images} alt=\"cityimages\"></img>\r\n        //     </div>\r\n        // )\r\n\r\n        const citiesList = cities.length ? (cities.filter(searchingFor(this.state.term)).map(city => {\r\n\r\n            return (\r\n\r\n                <div key={city._id}>\r\n                    <li> {city.name} </li>\r\n                    <img src={city.images} alt=\"cityimages\"></img>\r\n                </div>\r\n            )\r\n        })) : (\r\n                <div>Fetching Cities..</div>\r\n            )\r\n\r\n        return (\r\n\r\n\r\n            <div>\r\n                <form>\r\n                    <input type=\"text\" onChange={this.searchHandler}></input>\r\n                </form>\r\n                <div >\r\n                    {citiesList}\r\n                </div>\r\n                <div className=\"footer-container\">\r\n                    <HomeButton />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        cities: state.cities,\r\n        term: ''\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCities: () => dispatch(fetchCities())\r\n    }\r\n}\r\nfunction search(term) {\r\n    return function (x) {\r\n        return x.name.toLowerCase().includes(term.toLowerCase()) || !term;\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);\r\n\r\n"]},"metadata":{},"sourceType":"module"}