{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport { HomeButton } from './HomeButton';\nimport { connect } from 'react-redux';\nimport { fetchCities } from '../redux/actions/cityAction';\nimport { Link } from 'react-router-dom';\n\nclass MyCities extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchHandler = e => {\n      this.setState({\n        word: e.target.value\n      });\n    };\n\n    this.state = {\n      word: ''\n    };\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getCities();\n  }\n\n  render() {\n    console.log(this.props);\n    const cities = this.props.cities;\n    const word = this.state.word;\n    const citiesList = cities.length ? cities.filter(search(word)).map(city => {\n      return React.createElement(\"div\", {\n        key: city._id,\n        className: \"card  \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" \", city.name, \" \"), React.createElement(Link, {\n        to: '/' + city.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: city.images,\n        className: \"card-image\",\n        alt: \"cityimages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Fetching Cities..\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"center container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"SearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Search your city\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"SearchBar\",\n      onChange: this.searchHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \" container \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, citiesList), React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cityReducer.cities\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(fetchCities())\n  };\n};\n\nfunction search(word) {\n  return x => {\n    return x.name.toLowerCase().includes(word.toLowerCase()) || !word;\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Cities.js"],"names":["React","Component","HomeButton","connect","fetchCities","Link","MyCities","constructor","props","searchHandler","e","setState","word","target","value","state","bind","componentDidMount","getCities","render","console","log","cities","citiesList","length","filter","search","map","city","_id","name","images","mapStateToProps","cityReducer","mapDispatchToProps","dispatch","x","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { HomeButton } from './HomeButton';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCities } from '../redux/actions/cityAction';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MyCities extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tword: ''\r\n\t\t};\r\n\r\n\t\tthis.searchHandler = this.searchHandler.bind(this);\r\n\t}\r\n\r\n\tsearchHandler = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tword: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getCities();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(this.props);\r\n\t\tconst { cities } = this.props;\r\n\t\tconst { word } = this.state;\r\n\t\tconst citiesList = cities.length ? (\r\n\t\t\tcities.filter(search(word)).map((city) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={city._id} className=\"card  \">\r\n\t\t\t\t\t\t<h3 className=\"orange\"> {city.name} </h3>\r\n\t\t\t\t\t\t<Link to={'/' + city.name}>\r\n\t\t\t\t\t\t\t<img src={city.images} className=\"card-image\" alt=\"cityimages\" />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t) : (\r\n\t\t\t<div className=\"center\">Fetching Cities..</div>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<form className=\"center container\">\r\n\t\t\t\t\t<label htmlFor=\"SearchBar\">Search your city</label>\r\n\t\t\t\t\t<input type=\"text\" id=\"SearchBar\" onChange={this.searchHandler} />\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className=\" container \">{citiesList}</div>\r\n\r\n\t\t\t\t<div className=\"footer-container\">\r\n\t\t\t\t\t<HomeButton />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcities: state.cityReducer.cities\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetCities: () => dispatch(fetchCities())\r\n\t};\r\n};\r\n\r\nfunction search(word) {\r\n\treturn (x) => {\r\n\t\treturn x.name.toLowerCase().includes(word.toLowerCase()) || !word;\r\n\t};\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);\r\n"]},"metadata":{},"sourceType":"module"}