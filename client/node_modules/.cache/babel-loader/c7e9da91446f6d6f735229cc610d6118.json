{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Itynerary.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchSchema, getSelectedItinerary } from '../redux/actions/schemaAction';\nimport { connect } from 'react-redux';\nimport { HomeButton } from './HomeButton';\n\nclass Itynerary extends Component {\n  componentDidMount() {\n    let name = this.props.match.params.name;\n    this.props.getSchema(name);\n  }\n\n  showDetails(schema) {\n    this.props.selectSchema(schema);\n  }\n\n  render() {\n    const schema = this.props.schema;\n    const ItyneraryList = schema.length ? schema.map(schem => {\n      return React.createElement(\"div\", {\n        key: schem._id,\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col s12 16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: schem.profilePic,\n        alt: \"schemaImg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"#\",\n        className: \"halfway-fab btn-floating orange pulse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"favorite\"))), React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, schem.title), React.createElement(\"p\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, schem.duration, \".\"), React.createElement(\"p\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, schem.hashtag), React.createElement(\"p\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"People rate this activity with \", schem.rating, \".\"), React.createElement(\"p\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"With just \", schem.price, \" euros for the best journey !\", ' ')), React.createElement(\"div\", {\n        className: \"card-action\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/activities\",\n        onClick: () => this.showDetails(schem),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"More Details\")))));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Loading...\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"center  z-depth-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, ' ', \"Find here your best activities\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, ItyneraryList), React.createElement(\"div\", {\n      className: \"mid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    schema: state.schemaReducer.schema,\n    loading: state.schemaReducer.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSchema: name => dispatch(fetchSchema(name)),\n    selectSchema: itineary => dispatch(getSelectedItinerary(itineary))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itynerary);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Itynerary.js"],"names":["React","Component","Link","fetchSchema","getSelectedItinerary","connect","HomeButton","Itynerary","componentDidMount","name","props","match","params","getSchema","showDetails","schema","selectSchema","render","ItyneraryList","length","map","schem","_id","profilePic","title","duration","hashtag","rating","price","mapStateToProps","state","schemaReducer","loading","mapDispatchToProps","dispatch","itineary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n   fetchSchema,\r\n   getSelectedItinerary\r\n} from '../redux/actions/schemaAction';\r\nimport { connect } from 'react-redux';\r\nimport { HomeButton } from './HomeButton';\r\n\r\nclass Itynerary extends Component {\r\n   componentDidMount() {\r\n      let { name } = this.props.match.params;\r\n      this.props.getSchema(name);\r\n   }\r\n\r\n   showDetails(schema) {\r\n      this.props.selectSchema(schema);\r\n   }\r\n\r\n   render() {\r\n      const { schema } = this.props;\r\n\r\n      const ItyneraryList = schema.length ? (\r\n         schema.map(schem => {\r\n            return (\r\n               <div key={schem._id} className=\"row\">\r\n                  <div className=\"col s12 16\">\r\n                     <div className=\"card\">\r\n                        <div className=\"card-image\">\r\n                           <img src={schem.profilePic} alt=\"schemaImg\" />\r\n\r\n                           <a\r\n                              href=\"#\"\r\n                              className=\"halfway-fab btn-floating orange pulse\">\r\n                              <i className=\"material-icons\">favorite</i>\r\n                           </a>\r\n                        </div>\r\n\r\n                        <div className=\"card-content\">\r\n                           <span className=\"card-title\">{schem.title}</span>\r\n\r\n                           <p className=\"flow-text\">{schem.duration}.</p>\r\n                           <p className=\"flow-text\">{schem.hashtag}</p>\r\n                           <p className=\"flow-text\">\r\n                              People rate this activity with {schem.rating}.\r\n                           </p>\r\n                           <p className=\"flow-text\">\r\n                              With just {schem.price} euros for the best journey\r\n                              !{' '}\r\n                           </p>\r\n                        </div>\r\n                        <div className=\"card-action\">\r\n                           <Link\r\n                              to=\"/activities\"\r\n                              onClick={() => this.showDetails(schem)}>\r\n                              More Details\r\n                           </Link>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            );\r\n         })\r\n      ) : (\r\n         <div className=\"center\">Loading...</div>\r\n      );\r\n      return (\r\n         <div>\r\n            <h5 className=\"center  z-depth-1\">\r\n               {' '}\r\n               Find here your best activities\r\n            </h5>\r\n            <div>{ItyneraryList}</div>\r\n            <div className=\"mid-container\" />\r\n            <div className=\"footer-container\">\r\n               <HomeButton />\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => {\r\n   return {\r\n      schema: state.schemaReducer.schema,\r\n      loading: state.schemaReducer.loading\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      getSchema: name => dispatch(fetchSchema(name)),\r\n      selectSchema: itineary => dispatch(getSelectedItinerary(itineary))\r\n   };\r\n};\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps\r\n)(Itynerary);\r\n"]},"metadata":{},"sourceType":"module"}