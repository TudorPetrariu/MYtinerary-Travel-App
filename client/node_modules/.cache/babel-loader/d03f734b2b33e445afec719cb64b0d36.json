{"ast":null,"code":"import { FETCH_SCHEMA_REQUEST, FETCH_SCHEMA_FAILURE, FETCH_SCHEMA_SUCCES } from './Types';\nexport const fetchSchemaRequest = () => {\n  return {\n    type: FETCH_SCHEMA_REQUEST\n  };\n};\nexport const fetchSchemaSucces = schema => {\n  return {\n    type: FETCH_SCHEMA_SUCCES,\n    payload: schema\n  };\n};\nexport const fetchSchemaFailure = error => {\n  return {\n    type: FETCH_SCHEMA_FAILURE,\n    payload: error\n  };\n};\nexport const fetchSchema = cityName => {\n  return function (dispatch) {\n    dispatch(fetchSchemaRequest());\n    fetch(\"/itinerary/\".concat(cityName), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(res => res.json()).then(json => {\n      dispatch(fetchSchemaSucces(json));\n      console.log(json);\n    }).catch(error => {\n      dispatch(fetchSchemaFailure(error.message));\n    });\n  };\n};\nexport default fetchSchema;","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\redux\\actions\\schemaAction.js"],"names":["FETCH_SCHEMA_REQUEST","FETCH_SCHEMA_FAILURE","FETCH_SCHEMA_SUCCES","fetchSchemaRequest","type","fetchSchemaSucces","schema","payload","fetchSchemaFailure","error","fetchSchema","cityName","dispatch","fetch","method","headers","then","res","json","console","log","catch","message"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,mBAArD,QAAgF,SAAhF;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACvC,SAAO;AACNC,IAAAA,IAAI,EAAEJ;AADA,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMK,iBAAiB,GAAIC,MAAD,IAAY;AAC5C,SAAO;AACNF,IAAAA,IAAI,EAAEF,mBADA;AAENK,IAAAA,OAAO,EAAED;AAFH,GAAP;AAIA,CALM;AAMP,OAAO,MAAME,kBAAkB,GAAIC,KAAD,IAAW;AAC5C,SAAO;AACNL,IAAAA,IAAI,EAAEH,oBADA;AAENM,IAAAA,OAAO,EAAEE;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc;AACxC,SAAO,UAASC,QAAT,EAAmB;AACzBA,IAAAA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;AACAU,IAAAA,KAAK,sBAAeF,QAAf,GAA2B;AAC/BG,MAAAA,MAAM,EAAE,KADuB;AAE/BC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AAFsB,KAA3B,CAAL,CAMEC,IANF,CAMQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANhB,EAOEF,IAPF,CAOQE,IAAD,IAAU;AACfN,MAAAA,QAAQ,CAACP,iBAAiB,CAACa,IAAD,CAAlB,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,KAVF,EAWEG,KAXF,CAWSZ,KAAD,IAAW;AACjBG,MAAAA,QAAQ,CAACJ,kBAAkB,CAACC,KAAK,CAACa,OAAP,CAAnB,CAAR;AACA,KAbF;AAcA,GAhBD;AAiBA,CAlBM;AAoBP,eAAeZ,WAAf","sourcesContent":["import { FETCH_SCHEMA_REQUEST, FETCH_SCHEMA_FAILURE, FETCH_SCHEMA_SUCCES } from './Types';\r\n\r\nexport const fetchSchemaRequest = () => {\r\n\treturn {\r\n\t\ttype: FETCH_SCHEMA_REQUEST\r\n\t};\r\n};\r\n\r\nexport const fetchSchemaSucces = (schema) => {\r\n\treturn {\r\n\t\ttype: FETCH_SCHEMA_SUCCES,\r\n\t\tpayload: schema\r\n\t};\r\n};\r\nexport const fetchSchemaFailure = (error) => {\r\n\treturn {\r\n\t\ttype: FETCH_SCHEMA_FAILURE,\r\n\t\tpayload: error\r\n\t};\r\n};\r\n\r\nexport const fetchSchema = (cityName) => {\r\n\treturn function(dispatch) {\r\n\t\tdispatch(fetchSchemaRequest());\r\n\t\tfetch(`/itinerary/${cityName}`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((json) => {\r\n\t\t\t\tdispatch(fetchSchemaSucces(json));\r\n\t\t\t\tconsole.log(json);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch(fetchSchemaFailure(error.message));\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport default fetchSchema;\r\n"]},"metadata":{},"sourceType":"module"}