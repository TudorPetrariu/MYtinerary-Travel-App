{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Itynerary.js\";\nimport React, { Component } from 'react';\nimport { fetchSchema } from '../redux/actions/schemaAction';\nimport { connect } from 'react-redux';\nimport { HomeButton } from './HomeButton';\n\nclass Itynerary extends Component {\n  componentDidMount() {\n    let name = this.props.match.params.name;\n    console.log(name);\n    this.props.getSchema(name);\n  }\n\n  render() {\n    const schema = this.props.schema;\n    const ItyneraryList = schema.length ? schema.map(schem => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: schem.id,\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"collection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, schem.title), React.createElement(\"img\", {\n        src: schem.profilePic,\n        alt: \"schemaImg\",\n        className: \"cityimages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, schem.duration, \".\"), React.createElement(\"p\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, schem.hashtag), React.createElement(\"p\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"People rate this activity with \", schem.rating, \".\"), React.createElement(\"p\", {\n        className: \"flow-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"With just \", schem.price, \" euros for the best journey ! \")));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Loading...\");\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"center  z-depth-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" Find here your best activities\"), React.createElement(\"div\", {\n      className: \" center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, ItyneraryList), React.createElement(\"div\", {\n      className: \"mid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    schema: state.schemaReducer.schema,\n    loading: state.schemaReducer.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSchema: name => dispatch(fetchSchema(name))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itynerary);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Itynerary.js"],"names":["React","Component","fetchSchema","connect","HomeButton","Itynerary","componentDidMount","name","props","match","params","console","log","getSchema","render","schema","ItyneraryList","length","map","schem","id","title","profilePic","duration","hashtag","rating","price","mapStateToProps","state","schemaReducer","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchSchema } from '../redux/actions/schemaAction';\r\nimport { connect } from 'react-redux';\r\nimport { HomeButton } from './HomeButton';\r\n\r\nclass Itynerary extends Component {\r\n\tcomponentDidMount() {\r\n\t\tlet { name } = this.props.match.params;\r\n\t\tconsole.log(name);\r\n\t\tthis.props.getSchema(name);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { schema } = this.props;\r\n\t\tconst ItyneraryList = schema.length ? (\r\n\t\t\tschema.map((schem) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div key={schem.id} className=\"container\">\r\n\t\t\t\t\t\t\t<h5 className=\"collection\">{schem.title}</h5>\r\n\t\t\t\t\t\t\t<img src={schem.profilePic} alt=\"schemaImg\" className=\"cityimages\" />\r\n\t\t\t\t\t\t\t<p className=\"flow-text\">{schem.duration}.</p>\r\n\t\t\t\t\t\t\t<p className=\"flow-text\">{schem.hashtag}</p>\r\n\t\t\t\t\t\t\t<p className=\"flow-text\">People rate this activity with {schem.rating}.</p>\r\n\t\t\t\t\t\t\t<p className=\"flow-text\">With just {schem.price} euros for the best journey ! </p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t) : (\r\n\t\t\t<div className=\"center\">Loading...</div>\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<h5 className=\"center  z-depth-1\"> Find here your best activities</h5>\r\n\t\t\t\t<div className=\" center\">{ItyneraryList}</div>\r\n\t\t\t\t<div className=\"mid-container\" />\r\n\t\t\t\t<div className=\"footer-container\">\r\n\t\t\t\t\t<HomeButton />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tschema: state.schemaReducer.schema,\r\n\t\tloading: state.schemaReducer.loading\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetSchema: (name) => dispatch(fetchSchema(name))\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Itynerary);\r\n"]},"metadata":{},"sourceType":"module"}