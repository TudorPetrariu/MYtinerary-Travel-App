{"ast":null,"code":"import { FETCH_SCHEMA_REQUEST, FETCH_SCHEMA_FAILURE, FETCH_SCHEMA_SUCCES } from './Types';\nexport const fetchSchemaRequest = () => {\n  return {\n    type: FETCH_SCHEMA_REQUEST\n  };\n};\nexport const fetchSchemaSucces = schema => {\n  return {\n    type: FETCH_SCHEMA_SUCCES,\n    payload: schema\n  };\n};\nexport const fetchSchemaFailure = error => {\n  return {\n    type: FETCH_SCHEMA_FAILURE,\n    payload: error\n  };\n};\nexport const fetchSchema = cityName => {\n  return function (dispatch) {\n    dispatch(fetchSchemaRequest());\n    fetch(\"/itinerary/\".concat(cityName), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(res => res.json()).then(json => {\n      dispatch(fetchSchemaSucces(json));\n      console.log(json);\n    }).catch(error => {\n      dispatch(fetchSchemaFailure(error.message));\n    });\n  };\n};","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\redux\\actions\\schemaAction.js"],"names":["FETCH_SCHEMA_REQUEST","FETCH_SCHEMA_FAILURE","FETCH_SCHEMA_SUCCES","fetchSchemaRequest","type","fetchSchemaSucces","schema","payload","fetchSchemaFailure","error","fetchSchema","cityName","dispatch","fetch","method","headers","then","res","json","console","log","catch","message"],"mappings":"AAAA,SACGA,oBADH,EAEGC,oBAFH,EAGGC,mBAHH,QAIO,SAJP;AAMA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACrC,SAAO;AACJC,IAAAA,IAAI,EAAEJ;AADF,GAAP;AAGF,CAJM;AAMP,OAAO,MAAMK,iBAAiB,GAAGC,MAAM,IAAI;AACxC,SAAO;AACJF,IAAAA,IAAI,EAAEF,mBADF;AAEJK,IAAAA,OAAO,EAAED;AAFL,GAAP;AAIF,CALM;AAMP,OAAO,MAAME,kBAAkB,GAAGC,KAAK,IAAI;AACxC,SAAO;AACJL,IAAAA,IAAI,EAAEH,oBADF;AAEJM,IAAAA,OAAO,EAAEE;AAFL,GAAP;AAIF,CALM;AAOP,OAAO,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AACpC,SAAO,UAASC,QAAT,EAAmB;AACvBA,IAAAA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;AACAU,IAAAA,KAAK,sBAAeF,QAAf,GAA2B;AAC7BG,MAAAA,MAAM,EAAE,KADqB;AAE7BC,MAAAA,OAAO,EAAE;AACN,wBAAgB;AADV;AAFoB,KAA3B,CAAL,CAMIC,IANJ,CAMSC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANhB,EAOIF,IAPJ,CAOSE,IAAI,IAAI;AACXN,MAAAA,QAAQ,CAACP,iBAAiB,CAACa,IAAD,CAAlB,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACF,KAVJ,EAWIG,KAXJ,CAWUZ,KAAK,IAAI;AACbG,MAAAA,QAAQ,CAACJ,kBAAkB,CAACC,KAAK,CAACa,OAAP,CAAnB,CAAR;AACF,KAbJ;AAcF,GAhBD;AAiBF,CAlBM","sourcesContent":["import {\r\n   FETCH_SCHEMA_REQUEST,\r\n   FETCH_SCHEMA_FAILURE,\r\n   FETCH_SCHEMA_SUCCES\r\n} from './Types';\r\n\r\nexport const fetchSchemaRequest = () => {\r\n   return {\r\n      type: FETCH_SCHEMA_REQUEST\r\n   };\r\n};\r\n\r\nexport const fetchSchemaSucces = schema => {\r\n   return {\r\n      type: FETCH_SCHEMA_SUCCES,\r\n      payload: schema\r\n   };\r\n};\r\nexport const fetchSchemaFailure = error => {\r\n   return {\r\n      type: FETCH_SCHEMA_FAILURE,\r\n      payload: error\r\n   };\r\n};\r\n\r\nexport const fetchSchema = cityName => {\r\n   return function(dispatch) {\r\n      dispatch(fetchSchemaRequest());\r\n      fetch(`/itinerary/${cityName}`, {\r\n         method: 'GET',\r\n         headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n         }\r\n      })\r\n         .then(res => res.json())\r\n         .then(json => {\r\n            dispatch(fetchSchemaSucces(json));\r\n            console.log(json);\r\n         })\r\n         .catch(error => {\r\n            dispatch(fetchSchemaFailure(error.message));\r\n         });\r\n   };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}