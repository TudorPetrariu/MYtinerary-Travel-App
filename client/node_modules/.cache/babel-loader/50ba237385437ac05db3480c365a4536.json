{"ast":null,"code":"import _defineProperty from \"D:\\\\Projects\\\\My First React App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_SCHEMA_FAILURE, FETCH_SCHEMA_REQUEST, FETCH_SCHEMA_SUCCES, GET_SELECTED_ITINERARY } from '../actions/Types';\nexport const initialState = {\n  loading: true,\n  schema: [],\n  error: ' ',\n  selectedSchema: {}\n};\n\nconst schemaReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SCHEMA_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case FETCH_SCHEMA_SUCCES:\n      return _objectSpread({}, state, {\n        loading: false,\n        schema: action.payload,\n        error: ''\n      });\n\n    case FETCH_SCHEMA_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        schema: [],\n        error: action.payload\n      });\n\n    case GET_SELECTED_ITINERARY:\n      return _objectSpread({}, state, {\n        selectedSchema: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default schemaReducer;","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\redux\\reducers\\schemaReducer.js"],"names":["FETCH_SCHEMA_FAILURE","FETCH_SCHEMA_REQUEST","FETCH_SCHEMA_SUCCES","GET_SELECTED_ITINERARY","initialState","loading","schema","error","selectedSchema","schemaReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SACGA,oBADH,EAEGC,oBAFH,EAGGC,mBAHH,EAIGC,sBAJH,QAKO,kBALP;AAOA,OAAO,MAAMC,YAAY,GAAG;AACzBC,EAAAA,OAAO,EAAE,IADgB;AAEzBC,EAAAA,MAAM,EAAE,EAFiB;AAGzBC,EAAAA,KAAK,EAAE,GAHkB;AAIzBC,EAAAA,cAAc,EAAE;AAJS,CAArB;;AAOP,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKX,oBAAL;AACG,+BACMS,KADN;AAEGL,QAAAA,OAAO,EAAE;AAFZ;;AAIH,SAAKH,mBAAL;AACG,+BACMQ,KADN;AAEGL,QAAAA,OAAO,EAAE,KAFZ;AAGGC,QAAAA,MAAM,EAAEK,MAAM,CAACE,OAHlB;AAIGN,QAAAA,KAAK,EAAE;AAJV;;AAMH,SAAKP,oBAAL;AACG,+BACMU,KADN;AAEGL,QAAAA,OAAO,EAAE,KAFZ;AAGGC,QAAAA,MAAM,EAAE,EAHX;AAIGC,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAJjB;;AAOH,SAAKV,sBAAL;AACG,+BACMO,KADN;AAEGF,QAAAA,cAAc,EAAEG,MAAM,CAACE;AAF1B;;AAKH;AACG,aAAOH,KAAP;AA5BN;AA8BF,CA/BD;;AAiCA,eAAeD,aAAf","sourcesContent":["import {\r\n   FETCH_SCHEMA_FAILURE,\r\n   FETCH_SCHEMA_REQUEST,\r\n   FETCH_SCHEMA_SUCCES,\r\n   GET_SELECTED_ITINERARY\r\n} from '../actions/Types';\r\n\r\nexport const initialState = {\r\n   loading: true,\r\n   schema: [],\r\n   error: ' ',\r\n   selectedSchema: {}\r\n};\r\n\r\nconst schemaReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case FETCH_SCHEMA_REQUEST:\r\n         return {\r\n            ...state,\r\n            loading: true\r\n         };\r\n      case FETCH_SCHEMA_SUCCES:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            schema: action.payload,\r\n            error: ''\r\n         };\r\n      case FETCH_SCHEMA_FAILURE:\r\n         return {\r\n            ...state,\r\n            loading: false,\r\n            schema: [],\r\n            error: action.payload\r\n         };\r\n\r\n      case GET_SELECTED_ITINERARY:\r\n         return {\r\n            ...state,\r\n            selectedSchema: action.payload\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nexport default schemaReducer;\r\n"]},"metadata":{},"sourceType":"module"}