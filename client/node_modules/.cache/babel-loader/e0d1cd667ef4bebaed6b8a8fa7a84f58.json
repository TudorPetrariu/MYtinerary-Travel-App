{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport { HomeButton } from './HomeButton';\nimport { connect } from 'react-redux';\nimport { fetchCities } from \"../redux/actions/cityAction\";\n\nclass MyCities extends Component {\n  componentDidMount() {\n    this.props.getCities();\n  }\n\n  render() {\n    const cities = this.props.cities;\n    const citiesList = cities.length ? cities.map(city => {\n      return React.createElement(\"div\", {\n        key: city._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, city.country, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" \", city.name), React.createElement(\"img\", {\n        src: city.images,\n        alt: \"cityimages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Fetching City\");\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, citiesList);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(fetchCities())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Cities.js"],"names":["React","Component","HomeButton","connect","fetchCities","MyCities","componentDidMount","props","getCities","render","cities","citiesList","length","map","city","_id","country","name","images","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAKA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7BK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,SAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UAEGC,MAFH,GAEc,KAAKH,KAFnB,CAEGG,MAFH;AAGL,UAAMC,UAAU,GAAGD,MAAM,CAACE,MAAP,GAAiBF,MAAM,CAACG,GAAP,CAAWC,IAAI,IAAI;AAEnD,aACI;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,OAAV,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKF,IAAI,CAACG,IAAV,CAFJ,EAII;AAAK,QAAA,GAAG,EAAEH,IAAI,CAACI,MAAf;AAAuB,QAAA,GAAG,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAQH,KAVmC,CAAjB,GAWX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAXR;AAcA,WAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKP,UAFL,CAFJ;AAyBH;;AAhD4B;;AAkDjC,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAEHV,IAAAA,MAAM,EAAEU,KAAK,CAACV;AAFX,GAAP;AAIH,CALD;;AAOA,MAAMW,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHd,IAAAA,SAAS,EAAE,MAAMc,QAAQ,CAAClB,WAAW,EAAZ;AADtB,GAAP;AAGH,CAJD;;AAQA,eAAeD,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { HomeButton } from './HomeButton'\r\nimport { connect } from 'react-redux';\r\nimport { fetchCities } from \"../redux/actions/cityAction\"\r\n\r\n\r\n\r\n\r\nclass MyCities extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getCities()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { cities } = this.props\r\n        const citiesList = cities.length ? (cities.map(city => {\r\n\r\n            return (\r\n                <div key={city._id}>\r\n                    <li>{city.country} </li>\r\n                    <p> {city.name}</p>\r\n\r\n                    <img src={city.images} alt=\"cityimages\"></img>\r\n                </div>\r\n            )\r\n        })) : (\r\n                <div>Fetching City</div>\r\n            )\r\n\r\n        return (\r\n\r\n            <div className=\"app\">\r\n\r\n                {citiesList}\r\n\r\n                {/* <div className=\"header-container\">\r\n                    <p className=\"itinerarydescription\">Find your perfect city</p>\r\n                </div>\r\n\r\n                <div className=\"mid-container\" >\r\n                    <p className=\"itinerarydescription\" >Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facilis quas commodi tenetur esse nemo nesciunt, corporis praesentium deserunt. Modi facilis corrupti assumenda ipsum libero neque veritatis exercitationem voluptatem quas possimus?</p>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"footer-container\">\r\n                    <p className=\"itinerarydescription\">Search</p>\r\n\r\n                    <HomeButton />\r\n\r\n                </div> */}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        cities: state.cities\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCities: () => dispatch(fetchCities())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);\r\n\r\n"]},"metadata":{},"sourceType":"module"}