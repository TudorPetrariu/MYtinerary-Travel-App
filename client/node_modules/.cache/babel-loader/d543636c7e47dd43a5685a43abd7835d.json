{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport { HomeButton } from './HomeButton';\nimport { connect } from 'react-redux';\nimport { getCities } from '../actions/citiesAction';\nimport PropTypes from 'prop-types';\n\nclass MyCities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cities: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getCities();\n  }\n\n  async componentDidMount() {\n    let fetchedCities = await fetch('/cities', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(res => res.json()).then(json => json.data);\n    this.setState({\n      cities: fetchedCities\n    });\n    console.log(this.state.cities);\n  }\n\n  render() {\n    const cities = this.state.cities;\n    const citiesList = cities.length ? cities.map(city => {\n      return React.createElement(\"div\", {\n        key: city._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, city.name), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, city.country), React.createElement(\"img\", {\n        src: city.images,\n        alt: \"cityimages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Loading cities\");\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"itinerarydescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Find your perfect city\")), React.createElement(\"div\", {\n      className: \"mid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"itinerarydescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facilis quas commodi tenetur esse nemo nesciunt, corporis praesentium deserunt. Modi facilis corrupti assumenda ipsum libero neque veritatis exercitationem voluptatem quas possimus?\")), React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"itinerarydescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Search\"), React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nMyCities.PropTypes = {\n  getCities: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.cities\n});\n\nexport default connect(mapStateToProps, {\n  getCities\n})(MyCities);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Cities.js"],"names":["React","Component","HomeButton","connect","getCities","PropTypes","MyCities","state","cities","componentDidMount","props","fetchedCities","fetch","method","headers","then","res","json","data","setState","console","log","render","citiesList","length","map","city","_id","name","country","images","func","isRequired","item","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAM7BM,KAN6B,GAMrB;AACJC,MAAAA,MAAM,EAAE;AADJ,KANqB;AAAA;;AAC7BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWN,SAAX;AAEH;;AAMD,QAAMK,iBAAN,GAA0B;AAEtB,QAAIE,aAAa,GAAG,MAAMC,KAAK,CAAC,SAAD,EAAY;AACvCC,MAAAA,MAAM,EAAE,KAD+B;AAEvCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAF8B,KAAZ,CAAL,CAOrBC,IAPqB,CAOhBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPS,EAQrBF,IARqB,CAQhBE,IAAI,IAAIA,IAAI,CAACC,IARG,CAA1B;AAUA,SAAKC,QAAL,CAAc;AACVX,MAAAA,MAAM,EAAEG;AADE,KAAd;AAGAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,MAAvB;AAEH;;AAGDc,EAAAA,MAAM,GAAG;AAAA,UACGd,MADH,GACc,KAAKD,KADnB,CACGC,MADH;AAEL,UAAMe,UAAU,GAAGf,MAAM,CAACgB,MAAP,GAAiBhB,MAAM,CAACiB,GAAP,CAAWC,IAAI,IAAI;AACnD,aACI;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,IAAI,CAACE,IAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,IAAI,CAACG,OAAX,CAFJ,EAGI;AAAK,QAAA,GAAG,EAAEH,IAAI,CAACI,MAAf;AAAuB,QAAA,GAAG,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAQH,KATmC,CAAjB,GAUX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVR;AAYA,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yPADJ,CALJ,EASI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CATJ,CADJ;AAmBH;;AA/D4B;;AAiEjCxB,QAAQ,CAACD,SAAT,GAAqB;AACjBD,EAAAA,SAAS,EAAEC,SAAS,CAAC0B,IAAV,CAAeC,UADT;AAEjBC,EAAAA,IAAI,EAAE5B,SAAS,CAAC6B,MAAV,CAAiBF;AAFN,CAArB;;AAKA,MAAMG,eAAe,GAAI5B,KAAD,KAAY;AAChC0B,EAAAA,IAAI,EAAE1B,KAAK,CAACC;AADoB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACgC,eAAD,EAAkB;AAAE/B,EAAAA;AAAF,CAAlB,CAAP,CAAwCE,QAAxC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { HomeButton } from './HomeButton'\r\nimport { connect } from 'react-redux'\r\nimport { getCities } from '../actions/citiesAction'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass MyCities extends Component {\r\n    componentDidMount() {\r\n        this.props.getCities();\r\n\r\n    }\r\n\r\n    state = {\r\n        cities: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        let fetchedCities = await fetch('/cities', {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        })\r\n\r\n            .then(res => res.json())\r\n            .then(json => json.data)\r\n\r\n        this.setState({\r\n            cities: fetchedCities\r\n        })\r\n        console.log(this.state.cities)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { cities } = this.state;\r\n        const citiesList = cities.length ? (cities.map(city => {\r\n            return (\r\n                <div key={city._id}>\r\n                    <div>{city.name}</div>\r\n                    <div>{city.country}</div>\r\n                    <img src={city.images} alt=\"cityimages\"></img>\r\n\r\n                </div>\r\n            )\r\n        })) : (\r\n                <div>Loading cities</div>\r\n            )\r\n        return (\r\n            <div className=\"app\">\r\n                <div className=\"header-container\">\r\n                    <p className=\"itinerarydescription\">Find your perfect city</p>\r\n                </div>\r\n\r\n                <div className=\"mid-container\" >\r\n                    <p className=\"itinerarydescription\" >Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facilis quas commodi tenetur esse nemo nesciunt, corporis praesentium deserunt. Modi facilis corrupti assumenda ipsum libero neque veritatis exercitationem voluptatem quas possimus?</p>\r\n                </div>\r\n                {/* {citiesList} */}\r\n                <div className=\"footer-container\">\r\n                    <p className=\"itinerarydescription\">Search</p>\r\n\r\n                    <HomeButton />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nMyCities.PropTypes = {\r\n    getCities: PropTypes.func.isRequired,\r\n    item: PropTypes.object.isRequired\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    item: state.cities\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCities })(MyCities);"]},"metadata":{},"sourceType":"module"}