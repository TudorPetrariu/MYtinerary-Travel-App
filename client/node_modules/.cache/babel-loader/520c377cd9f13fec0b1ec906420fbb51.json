{"ast":null,"code":"import _defineProperty from \"D:\\\\Projects\\\\My First React App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CREATE_NEW_USER_REQUEST, CREATE_NEW_USER_SUCCES, CREATE_NEW_USER_FAILURE, USER_LOGIN_REQUEST, USER_LOGIN_FAILURE, USER_LOGIN_SUCCES, USER_LOGOUT } from '../actions/Types';\nconst initialState = {\n  loading: true,\n  users: [],\n  error: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case USER_LOGIN_FAILURE:\n      console.log('user failed to login');\n      return _objectSpread({}, state, {\n        error: 'Invalid mail or password '\n      });\n\n    case USER_LOGIN_SUCCES:\n      console.log('login succes');\n      return _objectSpread({}, state, {\n        error: null\n      });\n\n    case USER_LOGOUT:\n      return _objectSpread({}, state, {\n        users: []\n      });\n\n    case CREATE_NEW_USER_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case CREATE_NEW_USER_SUCCES:\n      console.log('email added');\n      return _objectSpread({}, state, {\n        loading: false,\n        users: action.payload,\n        error: null\n      });\n\n    case CREATE_NEW_USER_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        users: [],\n        error: 'Email already in use'\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\redux\\reducers\\authReducer.js"],"names":["CREATE_NEW_USER_REQUEST","CREATE_NEW_USER_SUCCES","CREATE_NEW_USER_FAILURE","USER_LOGIN_REQUEST","USER_LOGIN_FAILURE","USER_LOGIN_SUCCES","USER_LOGOUT","initialState","loading","users","error","authReducer","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SACCA,uBADD,EAECC,sBAFD,EAGCC,uBAHD,EAICC,kBAJD,EAKCC,kBALD,EAMCC,iBAND,EAOCC,WAPD,QAQO,kBARP;AAUA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE,IADW;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKX,kBAAL;AACC,+BACIS,KADJ;AAECJ,QAAAA,OAAO,EAAE;AAFV;;AAID,SAAKJ,kBAAL;AACCW,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,+BACIJ,KADJ;AAECF,QAAAA,KAAK,EAAE;AAFR;;AAID,SAAKL,iBAAL;AACCU,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,+BACIJ,KADJ;AAECF,QAAAA,KAAK,EAAE;AAFR;;AAID,SAAKJ,WAAL;AACC,+BACIM,KADJ;AAECH,QAAAA,KAAK,EAAE;AAFR;;AAKD,SAAKT,uBAAL;AACC,+BACIY,KADJ;AAECJ,QAAAA,OAAO,EAAE;AAFV;;AAID,SAAKP,sBAAL;AACCc,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,+BACIJ,KADJ;AAECJ,QAAAA,OAAO,EAAE,KAFV;AAGCC,QAAAA,KAAK,EAAEI,MAAM,CAACI,OAHf;AAICP,QAAAA,KAAK,EAAE;AAJR;;AAMD,SAAKR,uBAAL;AACC,+BACIU,KADJ;AAECJ,QAAAA,OAAO,EAAE,KAFV;AAGCC,QAAAA,KAAK,EAAE,EAHR;AAICC,QAAAA,KAAK,EAAE;AAJR;;AAOD;AACC,aAAOE,KAAP;AA/CF;AAiDA,CAlDD;;AAoDA,eAAeD,WAAf","sourcesContent":["import {\r\n\tCREATE_NEW_USER_REQUEST,\r\n\tCREATE_NEW_USER_SUCCES,\r\n\tCREATE_NEW_USER_FAILURE,\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_FAILURE,\r\n\tUSER_LOGIN_SUCCES,\r\n\tUSER_LOGOUT\r\n} from '../actions/Types';\r\n\r\nconst initialState = {\r\n\tloading: true,\r\n\tusers: [],\r\n\terror: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase USER_LOGIN_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\t\tcase USER_LOGIN_FAILURE:\r\n\t\t\tconsole.log('user failed to login');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: 'Invalid mail or password '\r\n\t\t\t};\r\n\t\tcase USER_LOGIN_SUCCES:\r\n\t\t\tconsole.log('login succes');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: null\r\n\t\t\t};\r\n\t\tcase USER_LOGOUT:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: []\r\n\t\t\t};\r\n\r\n\t\tcase CREATE_NEW_USER_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\t\tcase CREATE_NEW_USER_SUCCES:\r\n\t\t\tconsole.log('email added');\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tusers: action.payload,\r\n\t\t\t\terror: null\r\n\t\t\t};\r\n\t\tcase CREATE_NEW_USER_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tusers: [],\r\n\t\t\t\terror: 'Email already in use'\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default authReducer;\r\n"]},"metadata":{},"sourceType":"module"}