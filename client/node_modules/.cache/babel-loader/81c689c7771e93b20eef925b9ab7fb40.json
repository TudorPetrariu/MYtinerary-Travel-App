{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\activities.js\";\nimport React, { Component } from \"react\";\nimport { HomeButton } from \"./HomeButton\";\nimport { connect } from \"react-redux\";\nimport { fetchSchema } from \"../redux/actions/schemaAction\";\nimport { Link } from \"react-router-dom\";\n\nclass activities extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchHandler = e => {\n      this.setState({\n        word: e.target.value\n      });\n    };\n\n    this.state = {\n      word: \"\"\n    };\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getCities();\n  }\n\n  render() {\n    console.log(this.props);\n    const cities = this.props.cities;\n    const word = this.state.word;\n    const citiesList = cities.length ? cities.filter(search(word)).map(city => {\n      return React.createElement(\"div\", {\n        key: city._id,\n        className: \"card center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \" \", city.name, \" \"), React.createElement(Link, {\n        to: \"/\" + city.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: city.images,\n        className: \"cityimages\",\n        alt: \"cityimages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Fetching Cities..\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"center container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"SearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Search your city\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"SearchBar\",\n      onChange: this.searchHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \" card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, citiesList), React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    schema: state.schemaReducer.schema\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(fetchSchema())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(activities);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\activities.js"],"names":["React","Component","HomeButton","connect","fetchSchema","Link","activities","constructor","props","searchHandler","e","setState","word","target","value","state","bind","componentDidMount","getCities","render","console","log","cities","citiesList","length","filter","search","map","city","_id","name","images","mapStateToProps","schema","schemaReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { HomeButton } from \"./HomeButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchSchema } from \"../redux/actions/schemaAction\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass activities extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      word: \"\"\r\n    };\r\n\r\n    this.searchHandler = this.searchHandler.bind(this);\r\n  }\r\n\r\n  searchHandler = e => {\r\n    this.setState({\r\n      word: e.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getCities();\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { cities } = this.props;\r\n    const { word } = this.state;\r\n    const citiesList = cities.length ? (\r\n      cities.filter(search(word)).map(city => {\r\n        return (\r\n          <div key={city._id} className=\"card center \">\r\n            <h3 className=\"orange\"> {city.name} </h3>\r\n            <Link to={\"/\" + city.name}>\r\n              <img src={city.images} className=\"cityimages\" alt=\"cityimages\" />\r\n            </Link>\r\n          </div>\r\n        );\r\n      })\r\n    ) : (\r\n      <div className=\"center\">Fetching Cities..</div>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <form className=\"center container\">\r\n          <label htmlFor=\"SearchBar\">Search your city</label>\r\n          <input type=\"text\" id=\"SearchBar\" onChange={this.searchHandler} />\r\n        </form>\r\n        <div className=\" card-content\">{citiesList}</div>\r\n\r\n        <div className=\"footer-container\">\r\n          <HomeButton />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    schema: state.schemaReducer.schema\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCities: () => dispatch(fetchSchema())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(activities);\r\n"]},"metadata":{},"sourceType":"module"}