{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Itynerary.js\";\nimport React, { Component } from 'react';\nimport { fetchSchema } from \"../redux/actions/schemaAction\";\nimport { connect } from 'react-redux';\nimport { HomeButton } from './HomeButton';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\n\nclass Itynerary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: null\n    };\n  }\n\n  // componentDidMount() {\n  //     console.log(this.props)\n  //     let id = this.props.match.params.ref\n  //     this.setState({\n  //         id: id\n  //     })\n  // }\n  // render() {\n  //     console.log(this.props.schema)\n  //     if (!this.props.loading)\n  //         return (\n  //             <div className=\"container\">\n  //                 <p>{this.props.schema[0].title}</p>\n  //             </div>\n  //         )\n  //     else\n  //         return (\n  //             <div>Loading ...</div>\n  //         )\n  // }\n  componentDidMount() {\n    let name = this.props.match.params.name;\n    console.log(name);\n    this.props.getSchema(name);\n  }\n\n  render() {\n    const schema = this.props.schema;\n    const ItyneraryList = schema.length ? schema.map(schem => {\n      return React.createElement(\"div\", {\n        key: schem._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, schem.title), React.createElement(\"img\", {\n        src: schem.profilePic,\n        alt: \"schemaImg\",\n        className: \"cityimages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, schem.hashtag), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, schem.duration), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, schem.rating), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"With just \", schem.price, \" euros\"));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Loading...\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, ItyneraryList, React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    schema: state.schemaReducer.schema,\n    loading: state.schemaReducer.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSchema: name => dispatch(fetchSchema(name))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itynerary);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Itynerary.js"],"names":["React","Component","fetchSchema","connect","HomeButton","BrowserRouter","Router","Switch","Route","Link","useParams","Itynerary","state","id","componentDidMount","name","props","match","params","console","log","getSchema","render","schema","ItyneraryList","length","map","schem","_id","title","profilePic","hashtag","duration","rating","price","mapStateToProps","schemaReducer","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,SALJ,QAMO,kBANP;;AASA,MAAMC,SAAN,SAAwBV,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BW,KAD8B,GACtB;AACJC,MAAAA,EAAE,EAAE;AADA,KADsB;AAAA;;AAK9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,iBAAiB,GAAG;AAAA,QACVC,IADU,GACD,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADhB,CACVH,IADU;AAEhBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,SAAKC,KAAL,CAAWK,SAAX,CAAqBN,IAArB;AACH;;AAGDO,EAAAA,MAAM,GAAG;AAAA,UACGC,MADH,GACc,KAAKP,KADnB,CACGO,MADH;AAEL,UAAMC,aAAa,GAAGD,MAAM,CAACE,MAAP,GAAiBF,MAAM,CAACG,GAAP,CAAWC,KAAK,IAAI;AACvD,aACI;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,KAAK,CAACE,KAAX,CADJ,EAEI;AAAK,QAAA,GAAG,EAAEF,KAAK,CAACG,UAAhB;AAA4B,QAAA,GAAG,EAAC,WAAhC;AAA4C,QAAA,SAAS,EAAC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,KAAK,CAACI,OAAV,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIJ,KAAK,CAACK,QAAV,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIL,KAAK,CAACM,MAAV,CALJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAcN,KAAK,CAACO,KAApB,WAPJ,CADJ;AAWH,KAZsC,CAAjB,GAad;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbR;AAeA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,aADL,EAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAQH;;AA1D6B;;AA4DlC,MAAMW,eAAe,GAAIvB,KAAD,IAAW;AAC/B,SAAO;AAEHW,IAAAA,MAAM,EAAEX,KAAK,CAACwB,aAAN,CAAoBb,MAFzB;AAGHc,IAAAA,OAAO,EAAEzB,KAAK,CAACwB,aAAN,CAAoBC;AAH1B,GAAP;AAOH,CARD;;AAUA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHlB,IAAAA,SAAS,EAAGN,IAAD,IAAUwB,QAAQ,CAACrC,WAAW,CAACa,IAAD,CAAZ;AAD1B,GAAP;AAGH,CAJD;;AAMA,eAAeZ,OAAO,CAACgC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C3B,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { fetchSchema } from \"../redux/actions/schemaAction\"\r\nimport { connect } from 'react-redux'\r\nimport { HomeButton } from './HomeButton';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\n\r\nclass Itynerary extends Component {\r\n    state = {\r\n        id: null\r\n    }\r\n\r\n    // componentDidMount() {\r\n\r\n    //     console.log(this.props)\r\n    //     let id = this.props.match.params.ref\r\n    //     this.setState({\r\n    //         id: id\r\n    //     })\r\n    // }\r\n    // render() {\r\n    //     console.log(this.props.schema)\r\n    //     if (!this.props.loading)\r\n    //         return (\r\n    //             <div className=\"container\">\r\n    //                 <p>{this.props.schema[0].title}</p>\r\n    //             </div>\r\n    //         )\r\n    //     else\r\n    //         return (\r\n    //             <div>Loading ...</div>\r\n    //         )\r\n    // }\r\n    componentDidMount() {\r\n        let { name } = this.props.match.params;\r\n        console.log(name)\r\n        this.props.getSchema(name)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { schema } = this.props\r\n        const ItyneraryList = schema.length ? (schema.map(schem => {\r\n            return (\r\n                <div key={schem._id}>\r\n                    <h5>{schem.title}</h5>\r\n                    <img src={schem.profilePic} alt=\"schemaImg\" className=\"cityimages\"></img>\r\n                    <p>{schem.hashtag}</p>\r\n                    <p>{schem.duration}</p>\r\n                    <p>{schem.rating}</p>\r\n\r\n                    <p>With just {schem.price} euros</p>\r\n                </div>\r\n            )\r\n        })) : (\r\n                <div className=\"center\">Loading...</div>\r\n            )\r\n        return (\r\n            <div>\r\n                {ItyneraryList}\r\n                <div className=\"footer-container\">\r\n                    <HomeButton />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        schema: state.schemaReducer.schema,\r\n        loading: state.schemaReducer.loading\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getSchema: (name) => dispatch(fetchSchema(name))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Itynerary);\r\n"]},"metadata":{},"sourceType":"module"}