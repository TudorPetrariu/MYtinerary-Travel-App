{"ast":null,"code":"import { CREATE_NEW_USER_SUCCES, CREATE_NEW_USER_REQUEST, CREATE_NEW_USER_FAILURE } from './Types';\nexport const fetchUserRequest = () => {\n  return {\n    type: CREATE_NEW_USER_REQUEST\n  };\n};\nexport const createUser = user => {\n  return {\n    type: CREATE_NEW_USER_SUCCES,\n    payload: user\n  };\n};\nexport const fetchUserFailure = error => {\n  return {\n    type: CREATE_NEW_USER_FAILURE,\n    payload: error\n  };\n};\nexport const fetchCreateUser = body => {\n  return dispatch => {\n    dispatch(fetchUserRequest());\n    fetch('/user/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json()).then(json => {\n      dispatch(createUser(json.data));\n      console.log(json.data);\n    }).catch(error => {\n      dispatch(fetchUserFailure(error.message));\n    });\n  };\n}; // export const fetchCreateUser = (body) => {\n// \treturn (dispatch) => {\n// \t\tfetch('/user/register', {\n// \t\t\tmethod: 'POST',\n// \t\t\theaders: {\n// \t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n// \t\t\t},\n// \t\t\tbody: JSON.stringify(body)\n// \t\t})\n// \t\t\t.then((res) => res.json())\n// \t\t\t.then((json) => dispatch(createUser(json.data)));\n// \t};\n// };","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\redux\\actions\\authActions.js"],"names":["CREATE_NEW_USER_SUCCES","CREATE_NEW_USER_REQUEST","CREATE_NEW_USER_FAILURE","fetchUserRequest","type","createUser","user","payload","fetchUserFailure","error","fetchCreateUser","body","dispatch","fetch","method","headers","JSON","stringify","then","res","json","data","console","log","catch","message"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,uBAAjC,EAA0DC,uBAA1D,QAAyF,SAAzF;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACrC,SAAO;AACNC,IAAAA,IAAI,EAAEH;AADA,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMI,UAAU,GAAIC,IAAD,IAAU;AACnC,SAAO;AACNF,IAAAA,IAAI,EAAEJ,sBADA;AAENO,IAAAA,OAAO,EAAED;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAIC,KAAD,IAAW;AAC1C,SAAO;AACNL,IAAAA,IAAI,EAAEF,uBADA;AAENK,IAAAA,OAAO,EAAEE;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAU;AACxC,SAAQC,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACAU,IAAAA,KAAK,CAAC,gBAAD,EAAmB;AACvBC,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAFc;AAKvBJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AALiB,KAAnB,CAAL,CAOEO,IAPF,CAOQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPhB,EAQEF,IARF,CAQQE,IAAD,IAAU;AACfR,MAAAA,QAAQ,CAACP,UAAU,CAACe,IAAI,CAACC,IAAN,CAAX,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,IAAjB;AACA,KAXF,EAYEG,KAZF,CAYSf,KAAD,IAAW;AACjBG,MAAAA,QAAQ,CAACJ,gBAAgB,CAACC,KAAK,CAACgB,OAAP,CAAjB,CAAR;AACA,KAdF;AAeA,GAjBD;AAkBA,CAnBM,C,CAqBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { CREATE_NEW_USER_SUCCES, CREATE_NEW_USER_REQUEST, CREATE_NEW_USER_FAILURE } from './Types';\r\n\r\nexport const fetchUserRequest = () => {\r\n\treturn {\r\n\t\ttype: CREATE_NEW_USER_REQUEST\r\n\t};\r\n};\r\n\r\nexport const createUser = (user) => {\r\n\treturn {\r\n\t\ttype: CREATE_NEW_USER_SUCCES,\r\n\t\tpayload: user\r\n\t};\r\n};\r\n\r\nexport const fetchUserFailure = (error) => {\r\n\treturn {\r\n\t\ttype: CREATE_NEW_USER_FAILURE,\r\n\t\tpayload: error\r\n\t};\r\n};\r\n\r\nexport const fetchCreateUser = (body) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(fetchUserRequest());\r\n\t\tfetch('/user/register', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(body)\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((json) => {\r\n\t\t\t\tdispatch(createUser(json.data));\r\n\t\t\t\tconsole.log(json.data);\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch(fetchUserFailure(error.message));\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\n// export const fetchCreateUser = (body) => {\r\n// \treturn (dispatch) => {\r\n// \t\tfetch('/user/register', {\r\n// \t\t\tmethod: 'POST',\r\n// \t\t\theaders: {\r\n// \t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n// \t\t\t},\r\n// \t\t\tbody: JSON.stringify(body)\r\n// \t\t})\r\n// \t\t\t.then((res) => res.json())\r\n// \t\t\t.then((json) => dispatch(createUser(json.data)));\r\n// \t};\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}