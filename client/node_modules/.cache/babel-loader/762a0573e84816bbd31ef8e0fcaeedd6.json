{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\MYtinerary.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCities } from \"../redux/actions/cityAction\";\n\nclass MYtinerary extends React.Component {\n  componentDidMount() {\n    this.props.getCities();\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"My Cities\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(fetchCities())\n  };\n};\n\nconst citiesList = this.props.length ? this.props.map(city => {\n  return React.createElement(\"div\", {\n    key: city._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, city.name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, city.country), React.createElement(\"img\", {\n    src: city.images,\n    alt: \"cityimages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n}) : React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"nothing\");\nexport default connect(mapStateToProps, mapDispatchToProps)(MYtinerary);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\MYtinerary.js"],"names":["React","connect","fetchCities","MYtinerary","Component","componentDidMount","props","getCities","render","console","log","mapStateToProps","state","cities","mapDispatchToProps","dispatch","citiesList","length","map","city","_id","name","country","images"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,6BAA5B;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAErCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,SAAX;AACH;;AACDC,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ;AAKH;;AAboC;;AAiBzC,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACC;AADX,GAAP;AAIH,CALD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHR,IAAAA,SAAS,EAAE,MAAMQ,QAAQ,CAACb,WAAW,EAAZ;AADtB,GAAP;AAGH,CAJD;;AAKA,MAAMc,UAAU,GAAG,KAAKV,KAAL,CAAWW,MAAX,GAAqB,KAAKX,KAAL,CAAWY,GAAX,CAAeC,IAAI,IAAI;AAC3D,SACI;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,IAAI,CAACE,IAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,IAAI,CAACG,OAAX,CAFJ,EAGI;AAAK,IAAA,GAAG,EAAEH,IAAI,CAACI,MAAf;AAAuB,IAAA,GAAG,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAQH,CATuC,CAArB,GAUX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVR;AAYA,eAAetB,OAAO,CAACU,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,UAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchCities } from \"../redux/actions/cityAction\"\r\n\r\nclass MYtinerary extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getCities()\r\n    }\r\n    render() {\r\n\r\n        console.log(this.props)\r\n        return (\r\n            <div >\r\n                <p>My Cities</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cities: state.cities\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCities: () => dispatch(fetchCities())\r\n    }\r\n}\r\nconst citiesList = this.props.length ? (this.props.map(city => {\r\n    return (\r\n        <div key={city._id}>\r\n            <div>{city.name}</div>\r\n            <div>{city.country}</div>\r\n            <img src={city.images} alt=\"cityimages\"></img>\r\n\r\n        </div>\r\n    )\r\n})) : (\r\n        <div>nothing</div>\r\n    )\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MYtinerary);\r\n"]},"metadata":{},"sourceType":"module"}