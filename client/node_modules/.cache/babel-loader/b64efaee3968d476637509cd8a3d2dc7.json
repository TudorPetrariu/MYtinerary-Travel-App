{"ast":null,"code":"import _defineProperty from \"D:\\\\Projects\\\\My First React App\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_CITIES_FAILURE, FETCH_CITIES_REQUEST, FETCH_CITIES_SUCCES } from '../actions/Types';\nexport const initialState = {\n  loading: false,\n  cities: [],\n  schema: [],\n  error: ' '\n};\n\nconst cityReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CITIES_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case FETCH_CITIES_SUCCES:\n      return _objectSpread({}, state, {\n        loading: false,\n        cities: action.payload,\n        error: ''\n      });\n\n    case FETCH_CITIES_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        cities: [],\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cityReducer;","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\redux\\reducers\\cityReducer.js"],"names":["FETCH_CITIES_FAILURE","FETCH_CITIES_REQUEST","FETCH_CITIES_SUCCES","initialState","loading","cities","schema","error","cityReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,mBAArD,QAAgF,kBAAhF;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC3BC,EAAAA,OAAO,EAAE,KADkB;AAE3BC,EAAAA,MAAM,EAAE,EAFmB;AAG3BC,EAAAA,MAAM,EAAE,EAHmB;AAI3BC,EAAAA,KAAK,EAAE;AAJoB,CAArB;;AAOP,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKV,oBAAL;AACC,+BACIQ,KADJ;AAECL,QAAAA,OAAO,EAAE;AAFV;;AAID,SAAKF,mBAAL;AACC,+BACIO,KADJ;AAECL,QAAAA,OAAO,EAAE,KAFV;AAGCC,QAAAA,MAAM,EAAEK,MAAM,CAACE,OAHhB;AAICL,QAAAA,KAAK,EAAE;AAJR;;AAMD,SAAKP,oBAAL;AACC,+BACIS,KADJ;AAECL,QAAAA,OAAO,EAAE,KAFV;AAGCC,QAAAA,MAAM,EAAE,EAHT;AAICE,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAJf;;AAMD;AACC,aAAOH,KAAP;AArBF;AAuBA,CAxBD;;AA0BA,eAAeD,WAAf","sourcesContent":["import { FETCH_CITIES_FAILURE, FETCH_CITIES_REQUEST, FETCH_CITIES_SUCCES } from '../actions/Types';\r\n\r\nexport const initialState = {\r\n\tloading: false,\r\n\tcities: [],\r\n\tschema: [],\r\n\terror: ' '\r\n};\r\n\r\nconst cityReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_CITIES_REQUEST:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\t\tcase FETCH_CITIES_SUCCES:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcities: action.payload,\r\n\t\t\t\terror: ''\r\n\t\t\t};\r\n\t\tcase FETCH_CITIES_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tcities: [],\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default cityReducer;\r\n"]},"metadata":{},"sourceType":"module"}