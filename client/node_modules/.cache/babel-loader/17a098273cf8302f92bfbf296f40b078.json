{"ast":null,"code":"import { CREATE_NEW_USER } from './Types';\nexport const createUser = user => {\n  return {\n    type: CREATE_NEW_USER,\n    payload: user\n  };\n};\nexport const fetchCreateUser = body => {\n  return dispatch => {\n    fetch('/user/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json());\n    console.log(json).then(json => dispatch(createUser(json.data)).catch(error => {\n      console.log('err');\n    }));\n  };\n};","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\redux\\actions\\authActions.js"],"names":["CREATE_NEW_USER","createUser","user","type","payload","fetchCreateUser","body","dispatch","fetch","method","headers","JSON","stringify","then","res","json","console","log","data","catch","error"],"mappings":"AAAA,SAASA,eAAT,QAAgC,SAAhC;AAEA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACnC,SAAO;AACNC,IAAAA,IAAI,EAAEH,eADA;AAENI,IAAAA,OAAO,EAAEF;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMG,eAAe,GAAIC,IAAD,IAAU;AACxC,SAAQC,QAAD,IAAc;AACpBC,IAAAA,KAAK,CAAC,gBAAD,EAAmB;AACvBC,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAFc;AAKvBJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AALiB,KAAnB,CAAL,CAMGO,IANH,CAMSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANjB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBF,IAAlB,CAAwBE,IAAD,IACtBR,QAAQ,CAACN,UAAU,CAACc,IAAI,CAACG,IAAN,CAAX,CAAR,CAAgCC,KAAhC,CAAuCC,KAAD,IAAW;AAChDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,KAFD,CADD;AAKA,GAbD;AAcA,CAfM","sourcesContent":["import { CREATE_NEW_USER } from './Types';\r\n\r\nexport const createUser = (user) => {\r\n\treturn {\r\n\t\ttype: CREATE_NEW_USER,\r\n\t\tpayload: user\r\n\t};\r\n};\r\n\r\nexport const fetchCreateUser = (body) => {\r\n\treturn (dispatch) => {\r\n\t\tfetch('/user/register', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(body)\r\n\t\t}).then((res) => res.json());\r\n\t\tconsole.log(json).then((json) =>\r\n\t\t\tdispatch(createUser(json.data)).catch((error) => {\r\n\t\t\t\tconsole.log('err');\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}