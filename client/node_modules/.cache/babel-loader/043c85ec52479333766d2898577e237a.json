{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport { HomeButton } from './HomeButton';\nimport { connect } from 'react-redux';\nimport { fetchCities } from \"../redux/actions/cityAction\";\nimport { fetchSchema } from \"../redux/actions/cityAction\";\nimport { Link } from 'react-router-dom';\n\nclass MyCities extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchHandler = e => {\n      this.setState({\n        word: e.target.value\n      });\n    };\n\n    this.state = {\n      word: ''\n    };\n    this.searchHandler = this.searchHandler.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getCities();\n    this.props.getSchema();\n  }\n\n  render() {\n    console.log(this.props);\n    const cities = this.props.cities;\n    const word = this.state.word;\n    const citiesList = cities.length ? cities.filter(search(word)).map(city => {\n      return React.createElement(\"div\", {\n        key: city._id,\n        className: \"card center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" \", city.name, \"  \"), React.createElement(Link, {\n        to: '/' + city._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: city.images,\n        className: \"cityimages\",\n        alt: \"cityimages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Fetching Cities..\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"center container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"SearchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Search your city\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"SearchBar\",\n      onChange: this.searchHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \" container \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, citiesList), React.createElement(\"div\", {\n      className: \"footer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cityReducer.cities\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(fetchCities())\n  };\n};\n\nfunction search(word) {\n  return x => {\n    return x.name.toLowerCase().includes(word.toLowerCase()) || !word;\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Cities.js"],"names":["React","Component","HomeButton","connect","fetchCities","fetchSchema","Link","MyCities","constructor","props","searchHandler","e","setState","word","target","value","state","bind","componentDidMount","getCities","getSchema","render","console","log","cities","citiesList","length","filter","search","map","city","_id","name","images","mapStateToProps","cityReducer","mapDispatchToProps","dispatch","x","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { HomeButton } from './HomeButton'\r\nimport { connect } from 'react-redux';\r\nimport { fetchCities } from \"../redux/actions/cityAction\"\r\nimport { fetchSchema } from \"../redux/actions/cityAction\"\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nclass MyCities extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            word: ''\r\n        }\r\n\r\n        this.searchHandler = this.searchHandler.bind(this)\r\n    }\r\n\r\n    searchHandler = (e) => {\r\n\r\n        this.setState({\r\n            word: e.target.value\r\n\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getCities()\r\n        this.props.getSchema()\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        const { cities } = this.props\r\n        const { word } = this.state\r\n        const citiesList = cities.length ? (cities.filter(search(word)).map(city => {\r\n\r\n            return (\r\n\r\n                <div key={city._id} className=\"card center \" >\r\n                    <h3 className=\"orange\" > {city.name}  </h3>\r\n                    <Link to={'/' + city._id}>\r\n                        <img src={city.images} className=\"cityimages\" alt=\"cityimages\" ></img>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        })) : (\r\n                <div className=\"center\">Fetching Cities..</div>\r\n            )\r\n\r\n        return (\r\n            <div>\r\n                <form className=\"center container\">\r\n                    <label htmlFor=\"SearchBar\" >Search your city</label>\r\n                    <input type=\"text\" id=\"SearchBar\" onChange={this.searchHandler} ></input>\r\n                </form>\r\n\r\n                <div className=\" container \">\r\n                    {citiesList}\r\n                </div>\r\n\r\n                <div className=\"footer-container\">\r\n                    <HomeButton />\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        cities: state.cityReducer.cities\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCities: () => dispatch(fetchCities())\r\n    }\r\n}\r\n\r\nfunction search(word) {\r\n    return (x) => {\r\n        return x.name.toLowerCase().includes(word.toLowerCase()) || !word;\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCities);\r\n\r\n"]},"metadata":{},"sourceType":"module"}