{"ast":null,"code":"import { FETCH_SCHEMA_REQUEST, FETCH_SCHEMA_FAILURE, FETCH_SCHEMA_SUCCES } from './Types';\nexport const fetchSchemaRequest = () => {\n  return {\n    type: FETCH_SCHEMA_REQUEST\n  };\n};\nexport const fetchSchemaSucces = cityinfos => {\n  return {\n    type: FETCH_SCHEMA_SUCCES,\n    payload: cityinfos\n  };\n};\nexport const fetchSchemaFailure = error => {\n  return {\n    type: FETCH_SCHEMA_FAILURE,\n    payload: error\n  };\n};\nexport const fetchSchema = () => {\n  return function (dispatch) {\n    dispatch(fetchSchemaRequest());\n    fetch('/Itynerary', {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }).then(res => res.json()).then(json => {\n      dispatch(fetchSchemaSucces(json.data));\n      console.log(json);\n    }).catch(error => {\n      dispatch(fetchSchemaFailure(error.message));\n    });\n  };\n};\nexport default fetchSchema;","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\redux\\actions\\schemaAction.js"],"names":["FETCH_SCHEMA_REQUEST","FETCH_SCHEMA_FAILURE","FETCH_SCHEMA_SUCCES","fetchSchemaRequest","type","fetchSchemaSucces","cityinfos","payload","fetchSchemaFailure","error","fetchSchema","dispatch","fetch","method","headers","then","res","json","data","console","log","catch","message"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,mBAArD,QAAgF,SAAhF;AAGA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMK,iBAAiB,GAAIC,SAAD,IAAe;AAC5C,SAAO;AACHF,IAAAA,IAAI,EAAEF,mBADH;AAEHK,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAME,kBAAkB,GAAGC,KAAK,IAAI;AACvC,SAAO;AACHL,IAAAA,IAAI,EAAEH,oBADH;AAEHM,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7B,SAAO,UAAUC,QAAV,EAAoB;AACvBA,IAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AACAS,IAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,KADQ;AAEhBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFO,KAAf,CAAL,CAMKC,IANL,CAMUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANjB,EAOKF,IAPL,CAOUE,IAAI,IAAI;AACVN,MAAAA,QAAQ,CAACN,iBAAiB,CAACY,IAAI,CAACC,IAAN,CAAlB,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KAVL,EAYKI,KAZL,CAYWZ,KAAK,IAAI;AACZE,MAAAA,QAAQ,CAACH,kBAAkB,CAACC,KAAK,CAACa,OAAP,CAAnB,CAAR;AACH,KAdL;AAeH,GAjBD;AAmBH,CApBM;AAwBP,eAAeZ,WAAf","sourcesContent":["import { FETCH_SCHEMA_REQUEST, FETCH_SCHEMA_FAILURE, FETCH_SCHEMA_SUCCES } from './Types'\r\n\r\n\r\nexport const fetchSchemaRequest = () => {\r\n    return {\r\n        type: FETCH_SCHEMA_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchSchemaSucces = (cityinfos) => {\r\n    return {\r\n        type: FETCH_SCHEMA_SUCCES,\r\n        payload: cityinfos\r\n    }\r\n}\r\nexport const fetchSchemaFailure = error => {\r\n    return {\r\n        type: FETCH_SCHEMA_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const fetchSchema = () => {\r\n    return function (dispatch) {\r\n        dispatch(fetchSchemaRequest())\r\n        fetch('/Itynerary', {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                dispatch(fetchSchemaSucces(json.data))\r\n                console.log(json)\r\n            })\r\n\r\n            .catch(error => {\r\n                dispatch(fetchSchemaFailure(error.message))\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default fetchSchema"]},"metadata":{},"sourceType":"module"}