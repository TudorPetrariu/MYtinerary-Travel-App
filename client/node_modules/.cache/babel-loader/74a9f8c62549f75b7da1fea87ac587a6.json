{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\components\\\\Itynerary.js\";\nimport React, { Component } from 'react';\nimport { fetchSchema } from \"../redux/actions/schemaAction\";\nimport { connect } from 'react-redux';\nimport { HomeButton } from './HomeButton';\n\nclass Itynerary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    let id = this.props.match.CityID;\n    this.setState({\n      id: id\n    });\n    this.props.getSchema();\n  }\n\n  render() {\n    // const { schema } = this.props\n    // const ItyneraryList = schema.length ? (schema.map(schem => {\n    //     return (\n    //         <div key={schem._id}>\n    //             <h5>{schem.title}</h5>\n    //             <p>{schem.hashtag}</p>\n    //             <p>{schem.rating}</p>\n    //             <img src={schem.profilePic} alt=\"schemaImg\" className=\"cityimages\"></img>\n    //             <p>{schem.duration}</p>\n    //             <p>{schem.CityID}</p>\n    //             <p>With just {schem.price} euros</p>\n    //         </div>\n    //     )\n    // })) : (\n    //         <div className=\"center\">Getting Schema</div>\n    //     )\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.id), React.createElement(HomeButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    schema: state.schemaReducer.schema\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSchema: () => dispatch(fetchSchema())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itynerary);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Itynerary.js"],"names":["React","Component","fetchSchema","connect","HomeButton","Itynerary","state","id","componentDidMount","console","log","props","match","CityID","setState","getSchema","render","mapStateToProps","schema","schemaReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAGA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BK,KAD8B,GACtB;AACJC,MAAAA,EAAE,EAAE;AADA,KADsB;AAAA;;AAI9BC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,QAAIJ,EAAE,GAAG,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAA1B;AACA,SAAKC,QAAL,CAAc;AACVP,MAAAA,EAAE,EAAEA;AADM,KAAd;AAKA,SAAKI,KAAL,CAAWI,SAAX;AACH;;AAGDC,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKV,KAAL,CAAWC,EAAnC,CADJ,EAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAUH;;AA3C6B;;AA6ClC,MAAMU,eAAe,GAAIX,KAAD,IAAW;AAC/B,SAAO;AAEHY,IAAAA,MAAM,EAAEZ,KAAK,CAACa,aAAN,CAAoBD;AAFzB,GAAP;AAOH,CARD;;AAUA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHN,IAAAA,SAAS,EAAE,MAAMM,QAAQ,CAACnB,WAAW,EAAZ;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAeC,OAAO,CAACc,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { fetchSchema } from \"../redux/actions/schemaAction\"\r\nimport { connect } from 'react-redux'\r\nimport { HomeButton } from './HomeButton'\r\n\r\n\r\nclass Itynerary extends Component {\r\n    state = {\r\n        id: null\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        let id = this.props.match.CityID;\r\n        this.setState({\r\n            id: id\r\n        })\r\n\r\n\r\n        this.props.getSchema()\r\n    }\r\n\r\n\r\n    render() {\r\n        // const { schema } = this.props\r\n        // const ItyneraryList = schema.length ? (schema.map(schem => {\r\n        //     return (\r\n        //         <div key={schem._id}>\r\n        //             <h5>{schem.title}</h5>\r\n        //             <p>{schem.hashtag}</p>\r\n        //             <p>{schem.rating}</p>\r\n        //             <img src={schem.profilePic} alt=\"schemaImg\" className=\"cityimages\"></img>\r\n        //             <p>{schem.duration}</p>\r\n        //             <p>{schem.CityID}</p>\r\n        //             <p>With just {schem.price} euros</p>\r\n        //         </div>\r\n        //     )\r\n        // })) : (\r\n        //         <div className=\"center\">Getting Schema</div>\r\n        //     )\r\n        return (\r\n            <div>\r\n                <h6 className=\"center\">{this.state.id}</h6>\r\n\r\n\r\n                {/* {ItyneraryList} */}\r\n                <HomeButton />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n        schema: state.schemaReducer.schema\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getSchema: () => dispatch(fetchSchema())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Itynerary);\r\n"]},"metadata":{},"sourceType":"module"}