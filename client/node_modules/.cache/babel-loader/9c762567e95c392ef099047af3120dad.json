{"ast":null,"code":"// import React, { Component } from 'react'\n// import { HomeButton } from './HomeButton'\n// import { connect } from 'react-redux';\n// import { fetchCities } from \"../redux/actions/cityAction\"\n// function search(word) {\n//     return (x) => {\n//         return x.name.toLowerCase().includes(word.toLowerCase()) || !word;\n//     }\n// }\n// class MyCities extends Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = {\n//             cities: '',\n//             word: '',\n//         }\n//         this.searchHandler = this.searchHandler.bind(this)\n//     }\n//     searchHandler = (e) => {\n//         e.preventDefault()\n//         this.setState({\n//             word: e.target.value\n//         })\n//     }\n//     componentDidMount() {\n//         this.props.getCities()\n//     }\n//     render() {\n//         console.log(this.props)\n//         const { cities } = this.props\n//         const { word } = this.state\n//         const citiesList = cities.length ? (cities.filter(search(word)).map(city => {\n//             return (\n//                 <div key={city._id} className=\"card center \" >\n//                     <h3 className=\"orange\" > {city.name}  </h3>\n//                     <img src={city.images} className=\"cityimages\" alt=\"cityimages\" ></img>\n//                 </div>\n//             )\n//         })) : (\n//                 <div className=\"center\">Fetching Cities..</div>\n//             )\n//         return (\n//             <div>\n//                 <form className=\"center container\">\n//                     <label htmlFor=\"SearchBar\" >Search your city</label>\n//                     <input type=\"text\" id=\"SearchBar\" onChange={this.searchHandler} values={word}></input>\n//                 </form>\n//                 <div className=\" container \">\n//                     {citiesList}\n//                 </div>\n//                 <div className=\"footer-container\">\n//                     <HomeButton />\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// const mapStateToProps = (state) => {\n//     return {\n//         cities: state.cities\n//     }\n// }\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         getCities: () => dispatch(fetchCities())\n//     }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(MyCities);","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\components\\Cities.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA","sourcesContent":["// import React, { Component } from 'react'\r\n// import { HomeButton } from './HomeButton'\r\n// import { connect } from 'react-redux';\r\n// import { fetchCities } from \"../redux/actions/cityAction\"\r\n\r\n// function search(word) {\r\n//     return (x) => {\r\n//         return x.name.toLowerCase().includes(word.toLowerCase()) || !word;\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// class MyCities extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = {\r\n//             cities: '',\r\n//             word: '',\r\n//         }\r\n\r\n//         this.searchHandler = this.searchHandler.bind(this)\r\n//     }\r\n\r\n//     searchHandler = (e) => {\r\n//         e.preventDefault()\r\n//         this.setState({\r\n//             word: e.target.value\r\n//         })\r\n\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.props.getCities()\r\n//     }\r\n\r\n//     render() {\r\n\r\n//         console.log(this.props)\r\n//         const { cities } = this.props\r\n//         const { word } = this.state\r\n//         const citiesList = cities.length ? (cities.filter(search(word)).map(city => {\r\n\r\n//             return (\r\n\r\n//                 <div key={city._id} className=\"card center \" >\r\n//                     <h3 className=\"orange\" > {city.name}  </h3>\r\n//                     <img src={city.images} className=\"cityimages\" alt=\"cityimages\" ></img>\r\n//                 </div>\r\n//             )\r\n//         })) : (\r\n//                 <div className=\"center\">Fetching Cities..</div>\r\n//             )\r\n\r\n//         return (\r\n//             <div>\r\n//                 <form className=\"center container\">\r\n//                     <label htmlFor=\"SearchBar\" >Search your city</label>\r\n//                     <input type=\"text\" id=\"SearchBar\" onChange={this.searchHandler} values={word}></input>\r\n//                 </form>\r\n\r\n//                 <div className=\" container \">\r\n//                     {citiesList}\r\n//                 </div>\r\n\r\n//                 <div className=\"footer-container\">\r\n//                     <HomeButton />\r\n//                 </div>\r\n//             </div>\r\n\r\n//         )\r\n//     }\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n\r\n//         cities: state.cities\r\n\r\n\r\n//     }\r\n\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         getCities: () => dispatch(fetchCities())\r\n//     }\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(MyCities);\r\n\r\n"]},"metadata":{},"sourceType":"module"}