{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\My First React App\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'; ///store-> globalize state\n///action(a function that returns an object)\n\nconst increment = () => {\n  return {\n    type: 'Add'\n  };\n};\n\nconst decrement = () => {\n  return {\n    type: \"Delete\"\n  };\n}; ////reducer\n\n\nconst counter = (state = 0, action) => {\n  switch (action.type) {\n    case \"Add\":\n      return state + 1;\n\n    case \"Delete\":\n      return state - 1;\n  }\n};\n\nlet store = createStore(counter);\nstore.subscribe(() => console.log(store.getState())); ////dispatch\n\nstore.dispatch(increment());\nstore.dispatch(decrement());\nstore.dispatch(decrement());\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["D:\\Projects\\My First React App\\client\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","increment","type","decrement","counter","state","action","store","subscribe","console","log","getState","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CAEA;AAIA;;AACA,MAAMC,SAAS,GAAG,MAAM;AACpB,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAKA,MAAMC,SAAS,GAAG,MAAM;AACpB,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD,C,CAKA;;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AACnC,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAK,KAAL;AACI,aAAOG,KAAK,GAAG,CAAf;;AACJ,SAAK,QAAL;AACI,aAAOA,KAAK,GAAG,CAAf;AAJR;AAMH,CAPD;;AAQA,IAAIE,KAAK,GAAGP,WAAW,CAACI,OAAD,CAAvB;AAEAG,KAAK,CAACC,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,CAAtB,E,CACA;;AACAJ,KAAK,CAACK,QAAN,CAAeX,SAAS,EAAxB;AACAM,KAAK,CAACK,QAAN,CAAeT,SAAS,EAAxB;AACAI,KAAK,CAACK,QAAN,CAAeT,SAAS,EAAxB;AAEAN,QAAQ,CAACgB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\n\n///store-> globalize state\n\n\n\n///action(a function that returns an object)\nconst increment = () => {\n    return {\n        type: 'Add'\n    }\n}\nconst decrement = () => {\n    return {\n        type: \"Delete\"\n    }\n}\n////reducer\n\nconst counter = (state = 0, action) => {\n    switch (action.type) {\n        case \"Add\":\n            return state + 1;\n        case \"Delete\":\n            return state - 1;\n    }\n};\nlet store = createStore(counter)\n\nstore.subscribe(() => console.log(store.getState()))\n////dispatch\nstore.dispatch(increment());\nstore.dispatch(decrement());\nstore.dispatch(decrement());\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}